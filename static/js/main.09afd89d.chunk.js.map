{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","action.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","Scroll","props","children","SearchBox","SearchChange","type","placeholder","onChange","App","store","useState","searchResults","setSearchResults","text","useSelector","state","searchRobots","searchField","robosUsers","getRobotsReducer","users","dispatch","useDispatch","useEffect","fetch","then","res","json","data","payload","catch","error","filteredRobots","filter","toLowerCase","includes","newRobot","e","setSearchField","target","value","initialState","robotInitialState","pending","logger","createLogger","rootReducer","combineReducers","action","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09afd89d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../style/card.css\";\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt=\"\" src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            name={robots[i].name}\n            email={robots[i].email}\n            id={robots[i].id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return <div className=\"scroll\">{props.children}</div>;\n};\n\nexport default Scroll;\n\n// background: linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%);\n","import React from \"react\";\n\nconst SearchBox = ({ SearchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={SearchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { useState, useEffect } from \"react\";\nimport CardList from \"../components/CardList\";\nimport Scroll from \"../components/Scroll\";\nimport SearchBox from \"../components/SearchBox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSearchField, requestRobots } from \"../action\";\nimport \"../style/App.css\";\n\nconst App = ({ store }) => {\n  const [searchResults, setSearchResults] = useState([]);\n  const text = useSelector((state) => state.searchRobots.searchField);\n  const robosUsers = useSelector((state) => state.getRobotsReducer.users);\n  const dispatch = useDispatch();\n  const onSearchChange = (e) => {\n    dispatch(setSearchField(e.target.value));\n  };\n\n  useEffect(() => {\n    dispatch(requestRobots());\n  }, [dispatch]);\n\n  useEffect(() => {\n    let filteredRobots = robosUsers.filter((robots) => {\n      return robots.name.toLowerCase().includes(text.toLowerCase());\n    });\n    setSearchResults(filteredRobots);\n  }, [text, robosUsers]);\n\n  const newRobot = searchResults;\n\n  return (\n    <div className=\"tc\">\n      <Scroll>\n        <h1 className=\"f2\">RoboFriends</h1>\n        <SearchBox SearchChange={onSearchChange} />\n      </Scroll>\n      {text === \"\" ? (\n        <CardList robots={robosUsers} />\n      ) : (\n        <CardList robots={newRobot} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\nexport const FETCH_PRODUCTS_PENDING = \"FETCH_PRODUCTS_PENDING\";\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_ERROR = \"FETCH_PRODUCTS_ERROR\";\n\nexport const setSearchField = (text) => {\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text,\n  };\n};\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: FETCH_PRODUCTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((res) => res.json())\n    .then((data) => dispatch({ type: FETCH_PRODUCTS_SUCCESS, payload: data }))\n    .catch((error) => dispatch({ type: FETCH_PRODUCTS_ERROR, payload: error }));\n};\n","import {\n  CHANGE_SEARCH_FIELD,\n  FETCH_PRODUCTS_PENDING,\n  FETCH_PRODUCTS_SUCCESS,\n  FETCH_PRODUCTS_ERROR,\n} from \"./action\";\n\nconst initialState = {\n  searchField: \"\",\n};\n\nexport const searchRobots = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: payload };\n    default:\n      return state;\n  }\n};\n\nconst robotInitialState = {\n  pending: false,\n  users: [],\n  error: null,\n};\n\nexport const getRobotsReducer = (state = robotInitialState, action) => {\n  switch (action.type) {\n    case FETCH_PRODUCTS_PENDING:\n      return {\n        ...state,\n        pending: true,\n      };\n    case FETCH_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        users: action.payload,\n      };\n    case FETCH_PRODUCTS_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunkMiddleWare from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport \"./style/index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\nimport { searchRobots, getRobotsReducer } from \"./reducers\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, getRobotsReducer });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleWare, logger)\n);\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}